<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BytesGenitivePlural" xml:space="preserve">
    <value>байт</value>
  </data>
  <data name="BytesGenitiveSingular" xml:space="preserve">
    <value>байта</value>
  </data>
  <data name="BytesNominative" xml:space="preserve">
    <value>байт</value>
  </data>
  <data name="CancelPrevious" xml:space="preserve">
    <value>Отмена чтения предыдущего журнала ...</value>
  </data>
  <data name="CreateRtfInProgress" xml:space="preserve">
    <value>Создание страницы для показа ...</value>
  </data>
  <data name="DaysGenitivePlural" xml:space="preserve">
    <value>дней</value>
  </data>
  <data name="DaysGenitiveSingular" xml:space="preserve">
    <value>дня</value>
  </data>
  <data name="DaysNominative" xml:space="preserve">
    <value>день</value>
  </data>
  <data name="DefaultParsingTemplateName" xml:space="preserve">
    <value>Шаблон по умолчанию</value>
  </data>
  <data name="DeleteCurrentTemplateCaption" xml:space="preserve">
    <value>Удаление шаблона</value>
  </data>
  <data name="DeleteCurrentTemplateMessage" xml:space="preserve">
    <value>Эту операцию нельзя отменить. Вы уверены?</value>
  </data>
  <data name="EncodingDetectionInProgress" xml:space="preserve">
    <value>Определение кодировки файла ...</value>
  </data>
  <data name="FinishLoading" xml:space="preserve">
    <value>Чтение журнала завершено. Журнал будет показан через примерно {0} секунд.</value>
  </data>
  <data name="HoursGenitivePlural" xml:space="preserve">
    <value>часов</value>
  </data>
  <data name="HoursGenitiveSingular" xml:space="preserve">
    <value>часа</value>
  </data>
  <data name="HoursNominative" xml:space="preserve">
    <value>час</value>
  </data>
  <data name="InvalidTemplate" xml:space="preserve">
    <value>Шаблон,который вы ввели неверный. Исправьте это.</value>
  </data>
  <data name="LogIndexing" xml:space="preserve">
    <value>Все записи журнала прочитаны. Идет индексирование ...</value>
  </data>
  <data name="LogInfoFormatString" xml:space="preserve">
    <value>Всего: {0}  к показу: {7} T: {1}  D: {2}  I: {3}  W: {4}  E: {5}  F: {6}</value>
  </data>
  <data name="MinLevelGreaterThenMax" xml:space="preserve">
    <value>Минимальный уровень должен быть меньше или равен максимальному</value>
  </data>
  <data name="MinutesGenitivePlural" xml:space="preserve">
    <value>минут</value>
  </data>
  <data name="MinutesGenitiveSingular" xml:space="preserve">
    <value>минуты</value>
  </data>
  <data name="MinutesNominative" xml:space="preserve">
    <value>минута</value>
  </data>
  <data name="NewVersionAvailable" xml:space="preserve">
    <value>Доступна новая версия logviewer. Текущая версия {0} а новая {1}. Загрузить её сейчас?</value>
  </data>
  <data name="ParsingTemplateApacheCombined" xml:space="preserve">
    <value>Комбинированный журнал доступа Apache</value>
  </data>
  <data name="ParsingTemplateApacheCommon" xml:space="preserve">
    <value>Общий журнал доступа Apache</value>
  </data>
  <data name="ParsingTemplateApacheServer" xml:space="preserve">
    <value>Сервер Apache</value>
  </data>
  <data name="ParsingTemplateIis" xml:space="preserve">
    <value>IIS</value>
  </data>
  <data name="ParsingTemplateNlog" xml:space="preserve">
    <value>Типичный NLog или log4j шаблон</value>
  </data>
  <data name="ParsingTemplatePlainText" xml:space="preserve">
    <value>Простой текст</value>
  </data>
  <data name="ParsingTemplateTeamcityBuildLog" xml:space="preserve">
    <value>Журнал сборки на JetBrains TeamCity</value>
  </data>
  <data name="ParsingTemplateWixBurn" xml:space="preserve">
    <value>Журнал WiX Burn</value>
  </data>
  <data name="PatternCompilation" xml:space="preserve">
    <value>Идет компиляция шаблона ...</value>
  </data>
  <data name="PatternCompilationFinished" xml:space="preserve">
    <value>Компиляция шаблона закончена. Идет чтение журнала ...</value>
  </data>
  <data name="ReadCompletedTemplate" xml:space="preserve">
    <value>Чтение завершено.  за {0}</value>
  </data>
  <data name="RemainingLessThenSecond" xml:space="preserve">
    <value>меньше секунды</value>
  </data>
  <data name="RestoreDefaultTemplateCaption" xml:space="preserve">
    <value>Восстановление настроек шаблонов по умолчанию</value>
  </data>
  <data name="RestoreDefaultTemplateText" xml:space="preserve">
    <value>Это действие удалит все ваши изменения. Уверены?</value>
  </data>
  <data name="SecondsGenitivePlural" xml:space="preserve">
    <value>секунд</value>
  </data>
  <data name="SecondsGenitiveSingular" xml:space="preserve">
    <value>секунды</value>
  </data>
  <data name="SecondsNominative" xml:space="preserve">
    <value>секунда</value>
  </data>
  <data name="SizeBytes" xml:space="preserve">
    <value>байт</value>
  </data>
  <data name="SizeEBytes" xml:space="preserve">
    <value>Эб</value>
  </data>
  <data name="SizeGBytes" xml:space="preserve">
    <value>Гб</value>
  </data>
  <data name="SizeKBytes" xml:space="preserve">
    <value>Кб</value>
  </data>
  <data name="SizeMBytes" xml:space="preserve">
    <value>Мб</value>
  </data>
  <data name="SizePBytes" xml:space="preserve">
    <value>Пб</value>
  </data>
  <data name="SizeTBytes" xml:space="preserve">
    <value>Тб</value>
  </data>
  <data name="SpeedPercent" xml:space="preserve">
    <value>{0} %</value>
  </data>
  <data name="SpeedPercentWithRemain" xml:space="preserve">
    <value>{0} %  ({1}/сек.) осталось {2}</value>
  </data>
  <data name="UpdateDownloadProgressFormat" xml:space="preserve">
    <value>Загружено {0} из {1}   {2}%</value>
  </data>
  <data name="ZeroFileDetected" xml:space="preserve">
    <value>Пустой файл. Файл не должен быть пустым.</value>
  </data>
</root>