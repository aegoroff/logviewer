<fluent:RibbonWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:properties="clr-namespace:logviewer.ui.Properties"
    xmlns:logviewer="clr-namespace:logviewer.ui"
    xmlns:fluent="clr-namespace:Fluent;assembly=Fluent"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:swf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
    x:Class="logviewer.ui.MainWindow" Closing="OnClosing" Loaded="OnLoaded"
    Title="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=Caption}" Height="714" Width="1000" MinHeight="500" MinWidth="500" Icon="Images/Large/category.png">
    <Window.Resources>
        <CollectionViewSource
            Source="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=MinLevelLabeles}"
            x:Key="MinLogLevelLabels" />
        <CollectionViewSource
            Source="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=MaxLevelLabeles}"
            x:Key="MaxLogLevelLabels" />
        <CollectionViewSource
            Source="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=Templates}"
            x:Key="ParsingTemplates" />
        <CollectionViewSource
            Source="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=Sorting}"
            x:Key="Sorting" />
        <Style x:Key="LogControlStyle" TargetType="{x:Type ListBox}">
            <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
            <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True"/>
            <Setter Property="ItemsSource" Value="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=Datasource}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsLoading}" Value="True">
                    <Setter Property="ListBox.Cursor" Value="Wait"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="Open" Executed="OnOpenFile"></CommandBinding>
        <CommandBinding Command="Close" Executed="OnExitApp"></CommandBinding>
        <CommandBinding Command="logviewer:LogviewerCommands.Update" Executed="OnUpdate"></CommandBinding>
        <CommandBinding Command="logviewer:LogviewerCommands.Statistic" Executed="OnStatistic"></CommandBinding>
        <CommandBinding Command="logviewer:LogviewerCommands.Settings" Executed="OnSettings"></CommandBinding>
    </Window.CommandBindings>
    <DockPanel>
        <fluent:Ribbon x:Name="Ribbon" DockPanel.Dock="Top">
            <fluent:Ribbon.Menu>
                <fluent:Backstage>
                    <fluent:BackstageTabControl>
                        <fluent:BackstageTabItem Header="{x:Static properties:Resources.Open}" />
                        <fluent:Button x:Name="ButtonExport" Header="{x:Static properties:Resources.Export}"
                                       LargeIcon="Images\Large\report_go.png" Icon="Images\Small\report_go.png" />
                        <fluent:Button x:Name="ButtonCloseApp" Header="{x:Static properties:Resources.Close}"
                                       LargeIcon="Images\Large\cancel.png" Icon="Images\Small\cancel.png" Command="Close"/>
                    </fluent:BackstageTabControl>
                </fluent:Backstage>
            </fluent:Ribbon.Menu>
            <!--Tabs-->
            <fluent:RibbonTabItem Header="{x:Static properties:Resources.View}">
                <fluent:RibbonGroupBox Header="{x:Static properties:Resources.Log}">
                    <fluent:Button x:Name="ButtonOpen" Header="{x:Static properties:Resources.Open}"
                                   LargeIcon="Images\Large\folder.png" Icon="Images\Small\folder.png" Command="Open"/>
                    <fluent:Button Header="{x:Static properties:Resources.Refresh}" x:Name="ButtonRefresh"
                                   Icon="Images\Small\database_refresh.png"
                                   IsEnabled="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=UiControlsEnabled}"
                                   LargeIcon="Images\Large\database_refresh.png"
                                   Command="logviewer:LogviewerCommands.Update" />
                    <fluent:Button x:Name="ButtonStat" Header="{x:Static properties:Resources.Statistic}"
                                   Icon="Images\Small\chart_pie.png"
                                   IsEnabled="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=UiControlsEnabled}"
                                   LargeIcon="Images\Large\chart_pie.png" SizeDefinition="Middle, Middle, Small" 
                                   Command="logviewer:LogviewerCommands.Statistic"/>
                    <fluent:DropDownButton x:Name="ButtonTemplateSelection"
                                           Header="{x:Static properties:Resources.TemplateSelection}"
                                           Icon="Images\Small\stamp_pattern.png"
                                           LargeIcon="Images\Large\stamp_pattern.png"
                                           SizeDefinition="Middle, Middle, Small"
                                           IsEnabled="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=UiControlsEnabled}"
                                           ItemsSource="{Binding Source={StaticResource ParsingTemplates}}">
                        <fluent:DropDownButton.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <Setter Property="IsChecked" 
                                        Value="{Binding Path=(logviewer:TemplateCommand.Checked)}"/>
                                <Setter Property="Header" 
                                        Value="{Binding Path=(logviewer:TemplateCommand.Text)}"/>
                                <EventSetter Event="Click" Handler="OnTemplateSelect"></EventSetter>
                            </Style>
                        </fluent:DropDownButton.ItemContainerStyle>
                    </fluent:DropDownButton>
                    <fluent:ComboBox x:Name="ButtonSorting"
                                     Header="{x:Static properties:Resources.Sorting}"
                                     SizeDefinition="Middle, Middle, Small"
                                     SelectedIndex="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=SortingOrder}"
                                     IsEnabled="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=UiControlsEnabled}"
                                     IsReadOnly="True"
                                     ItemsSource="{Binding Source={StaticResource Sorting}}" />
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox Header="{x:Static properties:Resources.LevelFilter}">
                    <fluent:ComboBox
                        x:Name="MinLevel"
                        Header="{x:Static properties:Resources.MinLabel}"
                        SelectedIndex="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=MinLevel}"
                        IsEnabled="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=UiControlsEnabled}"
                        IsReadOnly="True"
                        Margin="5"
                        ItemsSource="{Binding Source={StaticResource MinLogLevelLabels}}" />
                    <fluent:ComboBox
                        x:Name="MaxLevel"
                        Header="{x:Static properties:Resources.MaxLabel}"
                        SelectedIndex="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=MaxLevel}"
                        IsEnabled="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=UiControlsEnabled}"
                        IsReadOnly="True"
                        Margin="5"
                        ItemsSource="{Binding Source={StaticResource MaxLogLevelLabels}}" />
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox Header="{x:Static properties:Resources.DateFilter}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Label Content="{x:Static properties:Resources.From}" Grid.Column="0" Grid.Row="0" />
                        <Label Content="{x:Static properties:Resources.To}" Grid.Column="0" Grid.Row="1" />
                        <xctk:DateTimePicker 
                                Format="Custom" 
                                Margin="5"
                                Value="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=From}"
                                IsEnabled="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=UiControlsEnabled}"
                                ShowButtonSpinner="False"
                                Grid.Column="1" 
                                Grid.Row="0" />
                        <xctk:DateTimePicker 
                                Format="Custom" 
                                Margin="5" 
                                Value="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=To}"
                                IsEnabled="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=UiControlsEnabled}"
                                ShowButtonSpinner="False"
                                Grid.Column="1" 
                                Grid.Row="1" />
                    </Grid>
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox Header="{x:Static properties:Resources.TextFilter}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <fluent:TextBox 
                            Width="250" 
                            Margin="5" 
                            Text="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=MessageFilter}"
                            IsEnabled="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=UiControlsEnabled}"/>
                        <fluent:ToggleButton Grid.Column="1" Icon="Images\Small\x_ray.png" Margin="5, 0, 0, 0"
                                             SizeDefinition="Small, Small, Small" IsChecked="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=UseRegularExpressions}"
                                             ToolTip="{x:Static properties:Resources.UseRegexp}" 
                                             IsEnabled="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=UiControlsEnabled}" />
                    </Grid>
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>

            <fluent:RibbonTabItem Header="{x:Static properties:Resources.Settings}">
                <fluent:RibbonGroupBox>
                    <fluent:Button 
                        x:Name="ButtonSettings"
                        Header="{x:Static properties:Resources.Settings}"
                        LargeIcon="Images\Large\interface_preferences.png"
                        Icon="Images\Small\interface_preferences.png"
                        Command="logviewer:LogviewerCommands.Settings"/>
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
        </fluent:Ribbon>

        <StatusBar DockPanel.Dock="Bottom" VerticalAlignment="Bottom">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0">
                <Label Padding="3" x:Name="TotalMessagesLabel" Content="{x:Static properties:Resources.Total}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="1">
                <TextBlock Padding="3" x:Name="TotalMessages" Text="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=TotalMessages}" />
            </StatusBarItem>
            <Separator Grid.Column="2" />
            <StatusBarItem Grid.Column="3">
                <Label Padding="3" x:Name="ToDisplayMessagesLabel" Content="{x:Static properties:Resources.Filtered}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="4">
                <TextBlock Padding="3" x:Name="ToDisplayMessages" Text="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=ToDisplayMessages}" />
            </StatusBarItem>
            <Separator Grid.Column="5" />
            <StatusBarItem Grid.Column="6">
                <TextBlock Padding="3" x:Name="LogStatistic" Text="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=LogStatistic}" />
            </StatusBarItem>
            <Separator Grid.Column="7" />
            <StatusBarItem Grid.Column="8">
                <TextBlock Padding="3" x:Name="LogSize" Text="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=LogSize}" />
            </StatusBarItem>
            <Separator Grid.Column="9" />
            <StatusBarItem Grid.Column="10">
                <TextBlock Padding="3" x:Name="LogEncoding" Text="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=LogEncoding}" />
            </StatusBarItem>
            
            <StatusBarItem Grid.Column="11" HorizontalAlignment="Right">
                <ProgressBar Value="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=LogProgress}" Width="200" Height="16" />
            </StatusBarItem>

            <StatusBarItem Grid.Column="12">
                <TextBlock Padding="3" x:Name="LogProgressText" Text="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=LogProgressText}" />
            </StatusBarItem>

        </StatusBar>

        <ListBox 
            DockPanel.Dock="Top" 
            Height="Auto" 
            Margin="5" 
            BorderThickness="0"
            IsEnabled="{Binding Source={x:Static logviewer:MainViewModel.Current}, Path=UiControlsEnabled}"
            Style="{DynamicResource LogControlStyle}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" HorizontalAlignment="Stretch">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <xctk:RichTextBox BorderThickness="0" IsReadOnly="True" HorizontalAlignment="Stretch" Text="{Binding Mode=OneTime}" />
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

    </DockPanel>
</fluent:RibbonWindow>